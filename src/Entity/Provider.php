<?php

declare(strict_types=1);

/*
 * (c) 2021 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use Nines\UtilBundle\Entity\AbstractEntity;

/**
 * Provider.
 *
 * Any OJS provider may make deposits to the PLN.
 *
 * @ORM\Entity(repositoryClass="ProviderRepository")
 */
class Provider extends AbstractEntity {
    /**
     * Provider UUID, as generated by the PLN plugin.
     *
     * @var string
     * @ORM\Column(type="string", length=36, nullable=false)
     */
    private $uuid;

    /**
     * The title of the provider.
     *
     * @var string
     * @ORM\Column(type="string", nullable=false)
     */
    private $name;

    /**
     * The email of the provider.
     *
     * @var string
     * @ORM\Column(type="string", nullable=true)
     */
    private $email;

    /**
     * The provider's deposits.
     *
     * @var Collection|Deposit[]
     * @ORM\OneToMany(targetEntity="Deposit", mappedBy="provider")
     */
    private $deposits;

    /**
     * List of states where a deposit has been sent to LOCKSSOMatic.
     *
     * This should be a constant array, but those aren't supported in PHP 5.4.
     *
     * @var array
     */
    public static $SENTSTATES = [
        'deposited',
        'complete',
        'status-error',
    ];

    /**
     * Construct a new Provider.
     */
    public function __construct() {
        parent::__construct();
        $this->deposits = new ArrayCollection();
    }

    public function __toString() : string {
        return $this->name;
    }
}
